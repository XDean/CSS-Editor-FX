package fxml

import de.jensd.fx.glyphs.fontawesome.FontAwesomeIconView
import javafx.geometry.Insets
import javafx.scene.control.Button
import javafx.scene.control.Menu
import javafx.scene.control.MenuBar
import javafx.scene.control.MenuItem
import javafx.scene.control.ScrollBar
import javafx.scene.control.Separator
import javafx.scene.control.SeparatorMenuItem
import javafx.scene.control.SplitPane
import javafx.scene.control.Tab
import javafx.scene.control.TabPane
import javafx.scene.control.ToolBar
import javafx.scene.control.Tooltip
import javafx.scene.input.KeyCodeCombination
import javafx.scene.input.KeyCodeCombination.Modifier
import javafx.scene.layout.BorderPane
import javafx.scene.layout.VBox
import org.controlsfx.control.StatusBar
import org.fxmisc.richtext.CodeArea

component MainFrame controlledby xdean.css.editor.controller.MainFrameController {
  VBox {
    prefHeight : 600.0,
    prefWidth : 800.0,
    stylesheets : location "../css/global.css",
    padding : Insets {
      bottom : 1.0
    },
    children : [
      MenuBar {
        menus : [
          Menu {
            text : "File",
            items : [
              MenuItem {
                text : "New",
                onAction : controllermethod newFile,
                accelerator : KeyCodeCombination {
                  code : "N",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN
                },
                graphic : FontAwesomeIconView {
                  glyphName : "FILE_ALT"
                }
              },
              MenuItem {
                text : "Open...",
                onAction : controllermethod open,
                accelerator : KeyCodeCombination {
                  code : "O",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN
                },
                graphic : FontAwesomeIconView {
                  glyphName : "FOLDER_OPEN_ALT"
                }
              },
              Menu id openRecentMenu {
                text : "Open Recent",
                items : [
                  SeparatorMenuItem,
                  MenuItem {
                    text : "Clear Recent",
                    onAction : controllermethod clearRecent
                  }
                ]
              },
              SeparatorMenuItem,
              MenuItem id closeItem {
                text : "Close",
                onAction : controllermethod close,
                graphic : FontAwesomeIconView {
                  glyphName : "CLOSE"
                }
              },
              MenuItem id saveItem {
                text : "Save",
                onAction : controllermethod save,
                accelerator : KeyCodeCombination {
                  code : "S",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN
                },
                graphic : FontAwesomeIconView {
                  glyphName : "SAVE"
                }
              },
              MenuItem id saveAsItem {
                text : "Save as...",
                onAction : controllermethod saveAs,
                accelerator : KeyCodeCombination {
                  code : "S",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN,
                  modifiers : const KeyCodeCombination#ALT_DOWN
                }
              },
              MenuItem id revertItem {
                text : "Revert",
                onAction : controllermethod revert
              },
              SeparatorMenuItem,
              MenuItem {
                text : "Exit",
                onAction : controllermethod exit
              }
            ]
          },
          Menu {
            text : "Edit",
            items : [
              MenuItem id undoItem {
                text : "Undo",
                onAction : controllermethod undo,
                accelerator : KeyCodeCombination {
                  code : "Z",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN
                },
                graphic : FontAwesomeIconView {
                  glyphName : "UNDO"
                }
              },
              MenuItem id redoItem {
                text : "Redo",
                onAction : controllermethod redo,
                accelerator : KeyCodeCombination {
                  code : "Y",
                  modifiers : const KeyCodeCombination#CONTROL_DOWN
                },
                graphic : FontAwesomeIconView {
                  glyphName : "REPEAT"
                }
              },
              SeparatorMenuItem,
              MenuItem id findItem {
                text : "Find",
                onAction : controllermethod find
              },
              MenuItem id commentItem {
                text : "Toggle Comment",
                onAction : controllermethod comment
              },
              MenuItem id formatItem {
                text : "Format",
                onAction : controllermethod format
              }
            ]
          },
          Menu {
            text : "Help",
            items : [
              MenuItem {
                text : "Options",
                onAction : controllermethod option,
                graphic : FontAwesomeIconView {
                  glyphName : "GEAR"
                }
              },
              SeparatorMenuItem,
              Menu id skinMenu {
                text : "Skin"
              },
              MenuItem {
                text : "About",
                onAction : controllermethod about,
                graphic : FontAwesomeIconView {
                  glyphName : "EXCLAMATION_CIRCLE"
                }
              },
              MenuItem {
                text : "Help",
                onAction : controllermethod help,
                graphic : FontAwesomeIconView {
                  glyphName : "QUESTION_CIRCLE"
                }
              }
            ]
          }
        ]
      },
      ToolBar {
        items : [
          Separator {
            orientation : "VERTICAL"
          },
          Button id newButton {
            onAction : controllermethod newFile,
            tooltip : Tooltip {
              autoHide : true,
              text : "New"
            },
            graphic : FontAwesomeIconView {
              glyphName : "FILE_ALT",
              size : 15
            }
          },
          Button id openButton {
            onAction : controllermethod open,
            tooltip : Tooltip {
              text : "Open"
            },
            graphic : FontAwesomeIconView {
              glyphName : "FOLDER_OPEN_ALT",
              size : 15
            }
          },
          Button id saveButton {
            onAction : controllermethod save,
            tooltip : Tooltip {
              text : "Save"
            },
            graphic : FontAwesomeIconView {
              glyphName : "SAVE",
              size : 15
            }
          },
          Separator {
            orientation : "VERTICAL"
          },
          Button id undoButton {
            onAction : controllermethod undo,
            tooltip : Tooltip {
              text : "Undo"
            },
            graphic : FontAwesomeIconView {
              glyphName : "UNDO",
              size : 15
            }
          },
          Button id redoButton {
            onAction : controllermethod redo,
            tooltip : Tooltip {
              text : "Redo"
            },
            graphic : FontAwesomeIconView {
              glyphName : "REPEAT",
              size : 15
            }
          },
          Separator {
            orientation : "VERTICAL"
          }
        ]
      },
      SplitPane {
        call VBox#vgrow : "ALWAYS",
        items : [
          BorderPane {
            right : ScrollBar id verticalScrollBar {
              orientation : "VERTICAL",
              prefWidth : 15.0,
              call BorderPane#alignment : "CENTER"
            },
            bottom : ScrollBar id horizontalScrollBar {
              prefHeight : 15.0,
              call BorderPane#alignment : "CENTER"
            },
            center : TabPane id tabPane {
              call BorderPane#alignment : "CENTER",
              onDragDropped : controllermethod onDragDrop,
              onDragOver : controllermethod onDragOver,
              preview tabs : [
                Tab {
                  content : CodeArea {
                    wrapText : true
                  },
                  graphic : FontAwesomeIconView {
                    fill : "#7a9ece",
                    fontSmoothingType : "LCD",
                    glyphName : "SAVE"
                  }
                }
              ]
            }
          }
        ]
      },
      VBox id bottomExtraPane {
        children : [
          include fxml.SearchBar as searchBar
        ]
      },
      include fxml.StatusBar as statusBar
    ]
  }
}
